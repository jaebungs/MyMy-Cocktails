{"version":3,"sources":["webpack://cocktail-app/./src/actions/filters.js","webpack://cocktail-app/./src/components/LibraryPage.js","webpack://cocktail-app/./src/components/NothingFound.js","webpack://cocktail-app/./src/components/card/cardStyles.js","webpack://cocktail-app/./src/components/card/LiquorChip.js","webpack://cocktail-app/./src/components/card/CocktailCards.js","webpack://cocktail-app/./src/components/filterChip/filterChipStyle.js","webpack://cocktail-app/./src/components/filterChip/FilterChipInput.js","webpack://cocktail-app/./src/components/helpers/filterLiquorHelper.js","webpack://cocktail-app/./src/components/modal/recipeModalStyles.js","webpack://cocktail-app/./src/components/modal/RecipeModal.js","webpack://cocktail-app/./src/components/helpers/formatSentence.js","webpack://cocktail-app/./src/components/styles/chipColor.js"],"names":["searchHomeByName","text","type","searchHomeByLiquor","liquors","searchMyByName","searchMYByLiquor","searchByShakeInput","useState","openRecipe","setOpenRecipe","filterLiquors","createSelector","state","cocktails","filters","homeByName","homeByLiquors","filterLiquorHelper","useSelector","maxWidth","container","spacing","map","cocktail","key","_id","length","my","m","display","variant","cardStyles","makeStyles","card","background","padding","cardTitle","fontWeight","fontSize","userSelect","chipsContainer","margin","chip","liquor","classes","chipStyle","upperCaseLiquor","charAt","toUpperCase","slice","Chip","className","replace","join","size","label","name","ingredients","instruction","garnish","Grid","item","xs","sm","md","lg","CardActionArea","onClick","Card","Typography","Box","chips","filter","ingredient","toLowerCase","includes","forEach","liquorTypes","push","createLiquorChips","index","filterChipStyle","checked","backgroundColor","clear","cursor","filterChip","checkedTypes","setCheckedTypes","dispatch","useDispatch","pathname","window","location","useEffect","FormGroup","style","marginBottom","flexWrap","prev","handleChipClicked","clickable","disableRipple","disablefocusripple","filterByLiquors","liquorChips","containAll","i","some","trim","filterResult","textFiltered","recipeModalStyles","dialogContentContainer","border","modalTitle","borderBottom","marginTop","subtitle","borderRadius","color","contentsContainer","shakeAgainButton","addButton","handleShowCocktail","useLocation","auth","currentPage","setCurrentPage","id","JSON","parse","localStorage","getItem","result","handleClose","Dialog","open","fullWidth","onBackdropClick","DialogTitle","disabletypography","excludes","words","split","newSentence","word","notInParenth","indexOf","newWord","step","justifyContent","alignItems","width","mt","Button","disabled","token","addToMyBar","removeFromMyBar","whiskey","rum","brandy","cognac","sweetvermouth","dryvermouth","gin","vodka","tequila","mezcal","wine","beer","campari","maraschino","coffeeliqueur","triplesec"],"mappings":"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","file":"818.bundle.js","sourcesContent":["export const searchHomeByName = (text) => ({\r\n    type: 'SEARCH_HOME_BY_NAME',\r\n    text\r\n})\r\n\r\nexport const searchHomeByLiquor = (liquors) => ({\r\n    type: 'SEARCH_HOME_BY_LIQUOR',\r\n    liquors: [...liquors]\r\n})\r\n\r\nexport const searchMyByName = (text) => ({\r\n    type: 'SEARCH_MY_BY_NAME',\r\n    text\r\n})\r\n\r\nexport const searchMYByLiquor = (liquors) => ({\r\n    type: 'SEARCH_MY_BY_LIQUOR',\r\n    liquors: [...liquors]\r\n})\r\n\r\nexport const searchByShakeInput = (text) => ({\r\n    type: 'SEARCH_BY_SHAKE_INPUT',\r\n    text\r\n})","import React, {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {createSelector} from 'reselect';\r\nimport CocktailCards from './card/CocktailCards';\r\nimport {Grid, Container} from '@material-ui/core';\r\nimport FilterChipInput from './filterChip/FilterChipInput';\r\nimport filterLiquorHelper from './helpers/filterLiquorHelper';\r\nimport NothingFound from './NothingFound';\r\nimport RecipeModal from './modal/RecipeModal';\r\n\r\nconst LibraryPage = () => {\r\n  const [openRecipe, setOpenRecipe] = useState();\r\n\r\n  const byLiquors = (state) => state.filters.homeByLiquors;\r\n  const byName = (state) => state.filters.homeByName;\r\n\r\n  const filterLiquors = createSelector(\r\n    (state) => state.cocktails,\r\n    byName,\r\n    byLiquors,\r\n    filterLiquorHelper\r\n  );\r\n  const cocktails = useSelector(filterLiquors);\r\n\r\n  return (\r\n    <main>\r\n    <Container maxWidth=\"lg\">\r\n      <FilterChipInput />\r\n      <Grid container spacing={1}>\r\n        {cocktails.map((cocktail) => {\r\n          return <CocktailCards key={cocktail._id} {...cocktail} setOpenRecipe={setOpenRecipe} />;\r\n        })}\r\n        {cocktails.length === 0 && <NothingFound />}\r\n        {openRecipe && <RecipeModal {...openRecipe} setOpenRecipe={setOpenRecipe} />}\r\n      </Grid>\r\n    </Container>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LibraryPage;\r\n","import React from 'react';\r\n\r\nimport {Box, Typography} from '@material-ui/core';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\n\r\nfunction NothingFound() {\r\n  return (\r\n    <Box my={7} m=\"auto\" display=\"flex\">\r\n      <Typography variant=\"body1\">No cocktails found...</Typography>\r\n      <SentimentDissatisfiedIcon />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default NothingFound;\r\n","import {red} from '@material-ui/core/colors';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const cardStyles = makeStyles({\r\n  card: {\r\n    background: '#fff',\r\n    padding: '10px',\r\n  },\r\n  cardTitle: {\r\n    fontWeight: 'bold',\r\n    fontSize: '1.3rem',\r\n    userSelect: 'text'\r\n  },\r\n  chipsContainer: {\r\n    margin: '0.4rem 0'\r\n  },\r\n  chip: {\r\n    margin: '3px 5px 0 0'\r\n  },\r\n});\r\n","import React from 'react'\r\nimport { Chip  } from '@material-ui/core';\r\nimport { chipStyle } from '../styles/chipColor';\r\nimport { cardStyles } from './cardStyles';\r\n\r\nconst LiquorChip = ({liquor}) => {\r\n\r\n    const classes = chipStyle();\r\n    const chip = cardStyles();\r\n\r\n    const upperCaseLiquor = liquor.charAt(0).toUpperCase() + liquor.slice(1); // first latter Cap\r\n\r\n    return (\r\n        <Chip className={[ classes[liquor.replace(/\\s/g, '')], chip.chip ].join(' ')} variant=\"outlined\" size=\"small\" label={upperCaseLiquor} />\r\n    )\r\n}\r\n\r\nexport default LiquorChip;","import React from 'react';\r\nimport {Grid, Card, CardActionArea, Box, Typography } from '@material-ui/core';\r\nimport {liquorTypes} from '../../actions/cocktails';\r\nimport LiquorChip from './LiquorChip';\r\nimport {cardStyles} from './cardStyles';\r\n\r\nconst CocktailCards = ({_id, name, ingredients, instruction, garnish, setOpenRecipe}) => {\r\n  const classes = cardStyles();\r\n\r\n  const handleModal = () => {\r\n    setOpenRecipe({_id, name, ingredients, instruction, garnish});\r\n  };\r\n\r\n  const createLiquorChips = (ingredients) => {\r\n    let gingerRemovedIngredients = [];\r\n    let chips = [];\r\n    // Remove Ginger from ingredients\r\n    gingerRemovedIngredients = ingredients.filter(\r\n      (ingredient) => !ingredient.toLowerCase().includes('ginger' || 'gingers')\r\n    );\r\n    // check what ingredietns are listed to create chips.\r\n    gingerRemovedIngredients.forEach((ingredient) => {\r\n      liquorTypes.forEach((liquor) => {\r\n        if (ingredient.toLowerCase().includes(liquor.toLowerCase())) {\r\n          chips.push(liquor);\r\n        }\r\n      });\r\n    });\r\n    return chips;\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={6} md={4} lg={3}>\r\n      <article>\r\n      <CardActionArea  onClick={handleModal}>\r\n        <Card className={classes.card} variant=\"outlined\">\r\n          <Typography className={classes.cardTitle} variant=\"h2\">\r\n            {name}\r\n          </Typography>\r\n          <Box className={classes.chipsContainer} display=\"flex\">\r\n            {createLiquorChips(ingredients).map((liquor, index) => {\r\n              return <LiquorChip key={index} liquor={liquor} />;\r\n            })}\r\n          </Box>\r\n        </Card>\r\n      </CardActionArea>\r\n      </article>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CocktailCards;\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const filterChipStyle = makeStyles({\r\n\r\n    chip: {\r\n        margin: '6px 6px 0 0'\r\n    },\r\n    checked: {\r\n        backgroundColor: '#E8E8E8',\r\n        margin: '6px 6px 0 0'\r\n    },\r\n    clear: {\r\n        backgroundColor: 'transparent',\r\n        cursor: 'pointer',\r\n        margin: '6px 6px 0 0',\r\n        '&:hover': {\r\n            backgroundColor : '#EC4C4C'\r\n        }\r\n    },\r\n    '@media (max-width: 1024px)': {\r\n        clear: {\r\n            '&:hover': {\r\n                backgroundColor : 'transparent'\r\n            }\r\n        }\r\n    }\r\n});\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {liquorTypes} from '../../actions/cocktails';\r\nimport {searchHomeByLiquor, searchMYByLiquor} from '../../actions/filters';\r\nimport {Box, FormGroup, Chip} from '@material-ui/core';\r\nimport {chipStyle} from '../styles/chipColor';\r\nimport {filterChipStyle} from './filterChipStyle';\r\n\r\nconst FilterChipInput = () => {\r\n  const classes = chipStyle();\r\n  const filterChip = filterChipStyle();\r\n\r\n  const [checkedTypes, setCheckedTypes] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const pathname = window.location.pathname;\r\n\r\n  // When liquor filter clicked, dispatch to pathnamebyLiquor\r\n  useEffect(() => {\r\n    if (pathname === '/library') {\r\n      dispatch(searchHomeByLiquor(checkedTypes));\r\n    } else if (pathname === '/mybar') {\r\n      dispatch(searchMYByLiquor(checkedTypes));\r\n    }\r\n  }, [checkedTypes]);\r\n\r\n  // Handle checked liquor filters.\r\n  const handleChipClicked = (liquor) => {\r\n    if (checkedTypes.includes(liquor)) {\r\n      // remove from checkedTypes\r\n      setCheckedTypes(checkedTypes?.filter((type) => type !== liquor));\r\n    } else {\r\n      // add to checkedTypes\r\n      setCheckedTypes((prev) => [...prev, liquor]);\r\n    }\r\n  };\r\n\r\n  const handleClearAllCliecked = () => {\r\n    setCheckedTypes([]);\r\n  }\r\n\r\n  return (\r\n    <FormGroup style={{marginBottom: '1rem'}}>\r\n      <Box display=\"flex\" flexWrap=\"wrap\">\r\n        {liquorTypes.map((liquor, index) => {\r\n          // convert liquor with no space\r\n          return (\r\n            <Chip\r\n              key={index}\r\n              label={liquor.charAt(0).toUpperCase() + liquor.slice(1)} // first latter Cap\r\n              className={\r\n                checkedTypes.includes(liquor)\r\n                  ? [classes[liquor.replace(/\\s/g, '')], filterChip.checked].join(' ')\r\n                  : filterChip.chip\r\n              }\r\n              onClick={() => handleChipClicked(liquor)}\r\n              clickable\r\n              disableRipple\r\n              disablefocusripple=\"true\"\r\n              variant=\"outlined\"\r\n            />\r\n          );\r\n        })}\r\n        <Chip \r\n          label='Clear All'\r\n          onClick={handleClearAllCliecked}\r\n          className={filterChip.clear}\r\n          clickable={false}\r\n        />\r\n      </Box>\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default FilterChipInput;\r\n","// function for filtering cocktails that have all liquorChips.\r\n// compare two array of strings(ingredients) & liquorChips (Chips) and get all including cocktail object.\r\nconst filterByLiquors = (cocktails, liquorChips) => { \r\n  return cocktails.filter((cocktail)=>{\r\n    let containAll = true;\r\n    for (let i=0; i < liquorChips.length; i++){\r\n        if (!cocktail.ingredients.some(ingredient => ingredient.toLowerCase().includes(liquorChips[i].toLowerCase().trim()))) {\r\n            containAll = false;\r\n        }\r\n    }\r\n    return containAll\r\n  })\r\n}\r\n\r\nconst filterLiquorHelper = (cocktails, text, liquorChips) => {\r\n  let filterResult = [];\r\n//   cocktails = array[{},{}].  liquorChips=[types of liquor checked(strings)]\r\n  // When no filter and search\r\n  if (liquorChips.length === 0 && !text) {\r\n    filterResult = [...cocktails];\r\n  }\r\n\r\n// find cocktails only liquor chip filter active.\r\n  if (liquorChips.length > 0 && !text) {    \r\n    filterResult = filterByLiquors(cocktails, liquorChips);\r\n  }\r\n\r\n// when only text filter is active. Not really a good search tho.\r\n  if (liquorChips.length === 0 && text) {\r\n    cocktails.forEach((cocktail)=>{\r\n        if (cocktail.name.toLowerCase().includes(text.toLowerCase())){\r\n            filterResult.push(cocktail)\r\n        }\r\n    })\r\n  }\r\n\r\n//   if liquor filter and search filter both are active.\r\n  if (liquorChips.length > 0 && text) {\r\n    let textFiltered = []\r\n    cocktails.forEach((cocktail)=>{\r\n        if (cocktail.name.toLowerCase().includes(text.toLowerCase())){\r\n            textFiltered.push(cocktail)\r\n        }\r\n    })\r\n    filterResult = filterByLiquors(textFiltered, liquorChips);\r\n  }\r\n\r\n  return filterResult;\r\n};\r\n\r\nexport default filterLiquorHelper;\r\n","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport const recipeModalStyles = makeStyles({\r\n\r\n    dialogContentContainer: {\r\n        border: \"4px solid #000\",\r\n        padding: '2rem'\r\n    },\r\n    modalTitle: {\r\n        borderBottom: '3px solid #000',\r\n        fontSize: '1.7rem',\r\n        fontWeight: 'bold',\r\n        padding: '0',\r\n        marginTop: '0',\r\n        marginBottom: '2rem'\r\n    },\r\n    subtitle: {\r\n        background: \"#000\",\r\n        borderRadius: \"22px\",\r\n        color: '#fff',\r\n        fontSize: '0.8rem',\r\n        padding: '4px 16px'\r\n    },\r\n    contentsContainer: {\r\n        marginTop: '0.6rem',\r\n        marginBottom: '1.5rem'\r\n    },\r\n    shakeAgainButton: {\r\n        backgroundColor: '#C4FC68',\r\n        fontWeight: '500',\r\n        '&:hover': {\r\n            backgroundColor: '#7AE653',\r\n        }\r\n    },\r\n    addButton: {\r\n        margin: '0.9rem',\r\n        fontWeight: '500',\r\n        backgroundColor: '#C4FC68',\r\n        '&:hover': {\r\n            backgroundColor: '#7AE653'\r\n        }\r\n    },\r\n    '@media (max-width: 1024px)': {\r\n        shakeAgainButton: {\r\n            '&:hover': {\r\n                backgroundColor: '#C4FC68',\r\n            }\r\n        },\r\n        addButton: {\r\n            '&:hover': {\r\n                backgroundColor: '#C4FC68'\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n});\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {searchByShakeInput} from '../../actions/filters';\r\nimport {addToMyBar, removeFromMyBar} from '../../actions/myBar';\r\nimport {formatSentence} from '../helpers/formatSentence';\r\nimport {Box, Dialog, DialogTitle, Button, Typography} from '@material-ui/core';\r\nimport {recipeModalStyles} from './recipeModalStyles';\r\n\r\nconst RecipeModal = ({\r\n  _id,\r\n  name,\r\n  ingredients,\r\n  instruction,\r\n  garnish,\r\n  setOpenRecipe,\r\n  handleShowCocktail,\r\n}) => {\r\n  const classes = recipeModalStyles();\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  const [currentPage, setCurrentPage] = useState();\r\n  const id = JSON.parse(localStorage?.getItem('user'))?.result?._id;\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(location.pathname);\r\n  }, [location]);\r\n\r\n  const handleClose = () => {\r\n    setOpenRecipe(null);\r\n    dispatch(searchByShakeInput(''));\r\n  };\r\n\r\n  const handleAddtoMyBar = () => {\r\n    dispatch(addToMyBar({_id, name, ingredients, instruction, garnish, setOpenRecipe}, id));\r\n    setOpenRecipe(null);\r\n  };\r\n\r\n  const handleRemoveFromMyBar = () => {\r\n    dispatch(removeFromMyBar(_id, id));\r\n    setOpenRecipe(null);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={!!name} fullWidth={true} maxWidth=\"xs\" onBackdropClick={handleClose}>\r\n      <section className={classes.dialogContentContainer}>\r\n        <DialogTitle disabletypography=\"true\" variant=\"h2\" className={classes.modalTitle}>\r\n          {name}\r\n        </DialogTitle>\r\n        <Typography disabletypography=\"true\" variant=\"caption\" className={classes.subtitle}>\r\n          INGREDIENTS\r\n        </Typography>\r\n        <ul className={classes.contentsContainer}>\r\n          {ingredients.map((ingredient, index) => {\r\n            return <li key={index}>{formatSentence(ingredient)}</li>;\r\n          })}\r\n        </ul>\r\n        <Typography disabletypography=\"true\" variant=\"caption\" className={classes.subtitle}>\r\n          STEPS\r\n        </Typography>\r\n        <ol className={classes.contentsContainer}>\r\n          {instruction.map((step, index) => {\r\n            return <li key={index}>{step}</li>;\r\n          })}\r\n        </ol>\r\n\r\n        {garnish !== '' && (\r\n          <Typography disabletypography=\"true\" variant=\"caption\" className={classes.subtitle}>\r\n            GARNISH\r\n          </Typography>\r\n        )}\r\n        <ol className={classes.contentsContainer}>{garnish}</ol>\r\n        <Box\r\n          display=\"flex\"\r\n          flexWrap=\"wrap\"\r\n          justifyContent=\"flex-start\"\r\n          alignItems=\"center\"\r\n          width=\"100%\"\r\n          mt={7}\r\n        >\r\n          <Box>\r\n            {currentPage === '/' && (\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                className={classes.shakeAgainButton}\r\n                onClick={handleShowCocktail}\r\n              >\r\n                SHAKE AGAIN\r\n              </Button>\r\n            )}\r\n            {(currentPage === '/library' || currentPage === '/') && (\r\n              <Button\r\n                size=\"medium\"\r\n                className={classes.addButton}\r\n                variant=\"contained\"\r\n                disabled={!auth.result && !auth.token}\r\n                onClick={handleAddtoMyBar}\r\n              >\r\n                ADD\r\n              </Button>\r\n            )}\r\n            {currentPage === '/mybar' && (\r\n              <Button\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={handleRemoveFromMyBar}\r\n              >\r\n                REMOVE\r\n              </Button>\r\n            )}\r\n          </Box>\r\n\r\n          <Button size=\"medium\" onClick={handleClose}>\r\n            CLOSE\r\n          </Button>\r\n        </Box>\r\n      </section>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default RecipeModal;\r\n","export const formatSentence = (sentence) => {\r\n    // Change first character to uppercase. Exclude oz and anything betwwen ()\r\n    const excludes = ['oz'];\r\n    const words = sentence.toLowerCase().split(' ');\r\n    let newSentence = [];\r\n    let notInParenth;\r\n\r\n    // if word is not in excludes or not in (), make first character uppercase.\r\n    words.forEach((word) => {\r\n\r\n        if (word.includes('(')){\r\n            notInParenth = true;\r\n        }\r\n\r\n        if (excludes.indexOf(word) === -1 && !notInParenth) {\r\n            let newWord = word.charAt(0).toUpperCase() + word.slice(1);\r\n            newSentence.push(newWord);\r\n        } else if (notInParenth) {\r\n            newSentence.push(word);\r\n        } else {\r\n            newSentence.push(word);\r\n        }\r\n\r\n        if (word.includes(')')) {\r\n            notInParenth = false;\r\n        }\r\n    })\r\n    \r\n    return newSentence.join(' ').trim();\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const chipStyle = makeStyles({\r\n    whiskey: {\r\n        border: '1px solid #5c6bc0'\r\n    },\r\n    rum: {\r\n        border: '1px solid #2196f3'\r\n    },\r\n    brandy: {\r\n        border: '1px solid #64b5f6'\r\n    },\r\n    cognac: {\r\n        border: '1px solid #8d6e63'\r\n    },\r\n    sweetvermouth: {\r\n        border: '1px solid #ff9800'\r\n    },\r\n    dryvermouth: {\r\n        border: '1px solid #ffca28'\r\n    },\r\n    gin: {\r\n        border: '1px solid #66bb6a'\r\n    },\r\n    vodka: {\r\n        border: '1px solid #8bc34a'\r\n    },\r\n    \r\n    tequila: {\r\n        border: '1px solid #c5e1a5'\r\n    },\r\n    mezcal: {\r\n        border: '1px solid #cddc39'\r\n    },\r\n    wine: {\r\n        border: '1px solid #d32f2f'\r\n    },\r\n    beer: {\r\n        border: '1px solid #ffee58'\r\n    },\r\n    campari: {\r\n        border: '1px solid #ff5722'\r\n    },\r\n    maraschino: {\r\n        border: '1px solid #ff1744'\r\n    },\r\n    coffeeliqueur: {\r\n        border: '1px solid #B06325'\r\n    },\r\n    triplesec: {\r\n        border: '1px solid #FF6227'\r\n    }\r\n});\r\n"],"sourceRoot":""}